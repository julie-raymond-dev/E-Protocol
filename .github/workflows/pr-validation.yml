name: 🔍 Pull Request Validation

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  validate:
    name: 🧪 Validate PR
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --audit

      - name: 🔍 Run ESLint with annotations
        run: |
          echo "🔍 Running ESLint..."
          npx eslint . --format=json --output-file=eslint-report.json || true
          npx eslint . --format=github || true

      - name: 🏗️ Test build
        run: |
          echo "🏗️ Testing build process..."
          npm run build
          
      - name: 📊 Build size analysis
        run: |
          echo "📊 Analyzing build size..."
          du -sh dist/
          find dist/ -name "*.js" -exec du -h {} \; | sort -rh | head -10

      - name: 🔒 Security check
        run: |
          echo "🔒 Running security audit..."
          npm audit --audit-level=high

      - name: 📤 Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pr-validation-${{ github.event.number }}
          path: |
            dist/
            eslint-report.json
          retention-days: 7

  lighthouse:
    name: 🚦 Lighthouse Performance
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build for Lighthouse
        run: npm run build

      - name: 🚦 Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun || echo "Lighthouse CI completed with warnings"
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  auto-merge-dependabot:
    name: 🤖 Auto-merge Dependabot
    runs-on: ubuntu-latest
    needs: [validate]
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    
    steps:
      - name: 🤖 Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
